Mixin,Field name,Data type,Multiple,Description,Internal field name,defaultValue,defaultLanguage,isInMixinRef,indexInId,indexInParents,isInstanciable,isStorage,isDefinition,Has Mixins,Inherits,fieldAndMixins,isHistorizable,isContributable,documentation,maxScan,storageModel,importDefaultOnly,importAutolinkedOnly,useIdForParent
// TODOs & doc,"DONE gdenis samples ids (& relative designator ? Lower case ? All levels ?) for each type of first data line (& first Italian line)
DONE gdenis check data for each field of first data line (& first Italian line)
TODO gdenis DONE inheriting NUTS2/3 and then country-specific types using polymorphism and separate fr/it/es/tkData.csv DONE for fr tk, then DONE delete all « level »
DONE ancestors : only on geo:Area ? YES Make it work so. Does it solve the portal's need ? YES
DONE server : once polymorphism, o:ancestors ref type check
DONE import : once polymorphism, don't import mixins (or make it configurable)
DONE import : extract model import prefix from file name (OPT & display it)
TOTEST import : raise error if non-URL (http prefixed) value for Resource-typed field
DONE import : is separate ancestors from indexInId required now ? YES because NUT3 has not its NUTS2 in its id but also requires NUTS2!=3. Then do it
DONE import : i18n, for id default language is en (or LATER by model LATER default for a language ex. fr for fr_ca)
TODO LATER import : don't redefine fields to import when unnecessary, check that model overrides are compatible (no type change...), update cache
 TODO i18n of o_displayable:name / geo_area:name, then delete all « name », and DONE keep only one of o_displayable:name / geo_area:name / geo_City:name
 TODO i18n of model names (must be gotten separately and cached), then delete all « label »
TODO more i18n : query on default language by default, defaultLanguage of import!= of model / its use
TODO country ref on NUTS and below, NUTS2 ref on NUTS3 and below : copied fields ? Referencing Mixin ? As embedded ressource ? At least only one of geo_Area:country, geo_City:country etc. KEEP THE SPECIFIC ONE
 TODO pretty prefixes DONE FOR Internal field name
TODO link by query on key field and not only id (in order to unify models across business domains)
 TODO server : indexInId, ancestors & deduplication key fields redux
 Q :
 o_displayable:name = geo_area:name ? YES = Country:geoName ? YES =others typex:name ? YES NB. Displayable clearer about what it's about i.e. its « business »
 Parent spécifique ou générique ? Spécifique for now car facilite le linking and ancestors are generic anyway, see once refMixin / subresource
 Gdenis « info » = i18n, see above
TODO Are all idIso fields the same or not ? Yes => generic field BUT CONTRADICTS ABOVE
Designator still useful vs idIso (same value) ? NO Id any useful (no value) ? NO IdStat ? YES idNational ? YES means id actually used everyday
LATER Subtype resource fields ex. Departement to Region ???
Subtype URIs not subtyped ex. http://.../Country/FR rather than http://.../CountryFR/FR ??
For now i18n up to NUTS3, also below ex. CityGroup, Borough ?
 & see below",,,,,avoid if several of the same (sub)type,,,,,"Is Mixin = !isInstanciable.
Defaults to true, set to false when :
you don't want to import a Resource of this precise type,
such as for reusable, not concrete type (mixin)
or for concrete types inheriting from a polymorphic storage type","Defaults to true, set to false when :
You don't want this type to have its own collection / table,
Such as for concrete types inheriting from a polymorphic storage type","(differs from saying that a given inherited field should not be redefined, which is auto)
Defaults to true, set to false when :
No inherited field definition should be redefined",,i.e. reuses but overrides definitions,,,,,,"?
And path",,,
,,,,,,,en,,,,true,true,true,,,,,,,,,false,false,false
o:Displayable_0,odisp:name,i18n,,"TODO fill it in instance models, or replace their :name",,,,,,,false,false,,,,,,,,,,,,
o:Ancestor_0,o:ancestors,o:Ancestor_0,true,"auto computed OR can be provided (as URL, one per line or comma separated), in the same data file or additional ones",__computed,,,true,,,false,false,,,,,,,,,,,,
geo:Area_0,geo_area:idIso,String,,"LATER polymorphism ? TODO fill it in instance models, or replace their :name",,,,,,,false,true,,"o:Displayable_0,o:Ancestor_0",,,,,,,,,,
geo:Area_0,geo_area:country,geo:Country_0,,"LATER polymorphism or ancestors or refMixin ? TODO fill it in instance models, or replace their :name",,,,,,,,,,,,,,,,,,,,
geo:Country_0,geo_country:idIso,String,,"id country = iso, idem pour nuts ; ex. FR, IT, TR...",geo_country:idIso,,,true,0,,false,false,,geo:Area_0,,,,,,,,,,
//geo:Country_0,geo_country:testMap,map,,,,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:testMap.geo_country:testName,String,,,geo_country:name,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:testMap.geo_country:testIdIso,String,,,geo_country:idIso,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:testListMap,map,true,,,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:testListMap.geo_country:testName,String,,,geo_country:name,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:testListMap.geo_country:testIdIso,String,,,geo_country:idIso,,,,,,,,,,,,,,,,,,,
geo:Country_0,geo_country:name,i18n,,TODO rather o_displayable:name ?,,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.l,String,,,,fr,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.v,String,,,geo_country:name,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.0,map,,,,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.0.l,String,,,,it,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.0.v,String,,,geo_country:name,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.1,map,,,,,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.1.l,String,,,,en,,,,,,,,,,,,,,,,,,
//geo:Country_0,geo_country:name.1.v,String,,,,testen2,,,,,,,,,,,,,,,,,,
geo:Country_0,geo_country:statisticalInstitute,String,,"Website, OR TODO Q ressource reference ?",geo_country:statisticalInstitute,,,,,,,,,,,,,,,,,,,
geo:CountryFR_0,geo_country:idIso,String,,NOT defaultValue FR else multiple per row,geocofr:idIso,,,true,0,,,false,,geo:Country_0,,,,,,,,,,
geo:CountryFR_0,geo_country:name,i18n,,,geocofr:name,,fr,,,,,,,,,,,,,,,,,
geo:CountryFR_0,geo_country:statisticalInstitute,String,,,geocofr:statisticalInstitute,,,,,,,,,,,,,,,,,,,
geo:CountryIT_0,geo_country:idIso,String,,NOT defaultValue TK else multiple per row,geocoit:idIso,,,true,0,,,false,,geo:Country_0,,,,,,,,,,
geo:CountryIT_0,geo_country:name,i18n,,not the fr Internal field name else instanciated in fr,geocoit:name,,it,,,,,,,,,,,,,,,,,
geo:CountryIT_0,geo_country:statisticalInstitute,String,,not the fr Internal field name else instanciated in fr,geocoit:statisticalInstitute,,,,,,,,,,,,,,,,,,,
geo:CountryES_0,geo_country:idIso,String,,NOT defaultValue TK else multiple per row,geocoes:idIso,,,true,0,,,false,,geo:Country_0,,,,,,,,,,
geo:CountryES_0,geo_country:name,i18n,,not the fr Internal field name else instanciated in fr,geocoes:name,,es,,,,,,,,,,,,,,,,,
geo:CountryES_0,geo_country:statisticalInstitute,String,,not the fr Internal field name else instanciated in fr,geocoes:statisticalInstitute,,,,,,,,,,,,,,,,,,,
geo:CountryTK_0,geo_country:idIso,String,,NOT defaultValue TK else multiple per row,geocotk:idIso,,,true,0,,,false,,geo:Country_0,,,,,,,,,,
geo:CountryTK_0,geo_country:name,i18n,,not the fr Internal field name else instanciated in fr,geocotk:name,,tk,,,,,,,,,,,,,,,,,
geo:CountryTK_0,geo_country:statisticalInstitute,String,,not the fr Internal field name else instanciated in fr,geocotk:statisticalInstitute,,,,,,,,,,,,,,,,,,,
geo:NUTS_0,geo_NUTS:idIso,String,,NUTS def,,,,,1,,false,false,,geo:Area_0,,,,,,,,,,
geo:NUTS_0,geo_NUTS:idStat,String,,ex. id insee,,,,,,,,,,,,,,,,,,,,
geo:NUTS_0,geo_NUTS:idNational,String,,Actually used in the country ex. tax number in Spain. To specify differently for each country ! OR is (a rule on) (one of the) other fields ?,,,,,,,,,,,,,,,,,,,,
geo:NUTS_0,geo_NUTS:name,i18n,,,,,,,,,,,,,,,,,,,,,,
geo:NUTS_0,geo_NUTS:country,geo:Country_0,,NO internal field name but autolinking,,,,,0,0,,,,,,,,,,,,,,
geo:NUTS_0,geo_NUTS:parent,geo:NUTS_0,,vide pour NUTS2 (déjà country). anyway NO internal field name but subresource linking,,,,,,,,,,,,,,,,,,,,
geo:NUTS2_0,geo_NUTS:idIso,String,,NUTS 2 def,geo_NUTS2:idIso,,,,1,,false,false,,geo:NUTS_0,,,,,,,,,,
geo:NUTS2_0,geo_NUTS:idStat,String,,,geo_NUTS2:idStat,,,,,,,,,,,,,,,,,,,
geo:NUTS2_0,geo_NUTS:idNational,String,,,geo_NUTS2:idNational,,,,,,,,,,,,,,,,,,,
geo:NUTS2_0,geo_NUTS:name,i18n,,,geo_NUTS2:name,,,,,,,,,,,,,,,,,,,
geo:NUTS2_0,geo_NUTS:country,geo:Country_0,,,,,,,0,0,,,,,,,,,,,,,,
//geo:NUTS2_0,geo_NUTS:parent,geo:NUTS_0,,country is NUTS2's only parent,,,,,,,,,,,,,,,,,,,,
geo:Region_0,geo_NUTS:idIso,String,,,geon2fr:idIso,,,,1,,,false,,geo:NUTS2_0,,,,,,,,,,
geo:Region_0,geo_NUTS:idStat,String,,,geon2fr:idStat,,,,,,,,,,,,,,,,,,,
geo:Region_0,geo_NUTS:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:Region_0,geo_NUTS:name,i18n,,,geon2fr:name,,fr,,,,,,,,,,,,,,,,,
geo:Region_0,geo_NUTS:country,geo:Country_0,,LATER OPT subtype it FR ???,,,,,0,0,,,,,,,,,,,,,,
geo:Regione_0,geo_NUTS:idIso,String,,,geon2it:idIso,,,,1,,,false,,geo:NUTS2_0,,,,,,,,,,
geo:Regione_0,geo_NUTS:idStat,String,,,geon2it:idStat,,,,,,,,,,,,,,,,,,,
geo:Regione_0,geo_NUTS:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:Regione_0,geo_NUTS:name,i18n,,,geon2it:name,,it,,,,,,,,,,,,,,,,,
geo:Regione_0,geo_NUTS:country,geo:Country_0,,LATER OPT subtype it IT ???,,,,,0,0,,,,,,,,,,,,,,
geo:CommunidadAutonoma_0,geo_NUTS:idIso,String,,,geon2es:idIso,,,,1,,,false,,geo:NUTS2_0,,,,,,,,,,
geo:CommunidadAutonoma_0,geo_NUTS:idStat,String,,,geon2es:idStat,,,,,,,,,,,,,,,,,,,
geo:CommunidadAutonoma_0,geo_NUTS:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:CommunidadAutonoma_0,geo_NUTS:name,i18n,,,geon2es:name,,es,,,,,,,,,,,,,,,,,
geo:CommunidadAutonoma_0,geo_NUTS:country,geo:Country_0,,LATER OPT subtype it ES ???,,,,,0,0,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:idIso,String,,NUTS 3 def,geo_NUTS3:idIso,,,,1,,false,false,,geo:NUTS_0,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:idStat,String,,,geo_NUTS3:idStat,,,,,,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:idNational,String,,,geo_NUTS3:idNational,,,,,,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:name,i18n,,,geo_NUTS3:name,,,,,,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:country,geo:Country_0,,LATER refMixin ??,,,,,0,,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:parent,geo:NUTS_0,,LATER OPT subtype it geo:NUTS2_0 ???,,,,,,0,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:parent.geo_NUTS:idIso,String,,,geo_NUTS2:idIso,,,,,,,,,,,,,,,,,,,
geo:NUTS3_0,geo_NUTS:parent.geo_NUTS:country.geo_country:idIso,String,,,geo_country:idIso,,,,,,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:idIso,String,,,geon3fr:idIso,,,,1,,,false,,geo:NUTS3_0,,,,,,,,,,
geo:Departement_0,geo_NUTS:idStat,String,,,geon3fr:idStat,,,,,,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:name,i18n,,,geon3fr:name,,fr,,,,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:country,geo:Country_0,,,,,,,0,,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:parent,geo:NUTS_0,,LATER OPT subtype it geo:Region_0 ???,__noautolinking,,,,,0,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:parent.geo_NUTS:idIso,String,,,geon2fr:idIso,,,,,,,,,,,,,,,,,,,
geo:Departement_0,geo_NUTS:parent.geo_NUTS:country.geo_country:idIso,String,,,geocofr:idIso,,,,,,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:idIso,String,,,geon3it:idIso,,,,1,,,false,,geo:NUTS3_0,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:idStat,String,,,geon3it:idStat,,,,,,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:name,i18n,,,geon3it:name,,it,,,,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:country,geo:Country_0,,,,,,,0,,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:parent,geo:NUTS_0,,LATER OPT subtype it IT ???,__noautolinking,,,,,0,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:parent.geo_NUTS:idIso,String,,,geon2it:idIso,,,,,,,,,,,,,,,,,,,
geo:ProvinciaIT_0,geo_NUTS:parent.geo_NUTS:country.geo_country:idIso,String,,,geocoit:idIso,,,,,,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:idIso,String,,,geon3es:idIso,,,,1,,,false,,geo:NUTS3_0,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:idStat,String,,,geon3es:idStat,,,,,,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:name,i18n,,,geon3es:name,,es,,,,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:country,geo:Country_0,,,,,,,0,,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:parent,geo:NUTS_0,,LATER OPT subtype it ES ???,__noautolinking,,,,,0,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:parent.geo_NUTS:idIso,String,,,geon2es:idIso,,,,,,,,,,,,,,,,,,,
geo:ProvinciaES_0,geo_NUTS:parent.geo_NUTS:country.geo_country:idIso,String,,,geocoes:idIso,,,,,,,,,,,,,,,,,,,
geo:TKProvince_0,geo_NUTS:name,i18n,,TK NUTS3 within Country,Province,,tk,,1,,,false,,geo:NUTS3_0,,,,,,,,,,
geo:TKProvince_0,geo_NUTS:country,geo:Country_0,,LATER OPT subtype it TK ???,,,,,0,0,,,,,,,,,,,,,,
//geo:TKProvince_0,geo_NUTS:country.geo_country:idIso,String,,,__useDefault,TK,,,,,,,,,,,,,,,,,,
//geo:TKProvince_0,geo_NUTS:country.geo_country:name,String,,,__useDefault,Turkey,en,,,,,,,,,,,,,,,,,
geo:CityGroup_0,geo_cityGroup:name,String,,TODO mdutoo polymorphism pour : Id : nom + parent = vide en France mais nuts3 en Espagne !! => indexInId différents en France et en Epagne TODO par polymorphisme,geo_cityGroup:name,,,,1,,false,false,,geo:Area_0,,,,,,,,,,
geo:CityGroup_0,geo_cityGroup:idStat,String,"not in France, in Italy maybe of the Provincia ?",,geo_cityGroup:idStat,,,,,,,,,,,,,,,,,,,
geo:CityGroup_0,geo_cityGroup:country,geo:Country_0,,NO internal field name but auto linking,,,,,0,0,,,,,,,,,,,,,,
geo:CommunauteDeCommunes_0,geo_cityGroup:name,String,,TODO Q not i18n ???,geocigrfr:name,,,,1,,,false,,geo:CityGroup_0,,,,,,,,,,
geo:CommunauteDeCommunes_0,geo_cityGroup:idStat,String,"not in France, in Italy maybe of the Provincia ?",,,,,,,,,,,,,,,,,,,,,
geo:CommunauteDeCommunes_0,geo_cityGroup:country,geo:Country_0,,,,,,,0,0,,,,,,,,,,,,,,
geo:Comarca_0,geo_cityGroup:name,String,,TODO Q not i18n ???,geocigres:name,,,,1,,,false,,geo:CityGroup_0,,,,,,,,,,
geo:Comarca_0,geo_cityGroup:idStat,String,"not in France, in Italy maybe of the Provincia ?",,,,,,,,,,,,,,,,,,,,,
geo:Comarca_0,geo_cityGroup:country,geo:Country_0,,,,,,,0,0,,,,,,,,,,,,,,
geo:City_0,geo_city:name,i18n,,id ville = nuts3 + nom,,,,,1,,false,false,,geo:Area_0,,,,,,,,,,
//geo:City_0,geo_city:name.l,String,,default language,,fr,,,,,,,,,,,,,,,,,,
//geo:City_0,geo_city:name.v,String,,,geo_city:name,,,,,,,,,,,,,,,,,,,
geo:City_0,geo_city:country,geo:Country_0,,NO internal field name but autolinking,,,,,,,,,,,,,,,,,,,,
geo:City_0,geo_city:idStat,String,,,geo_city:idStat,,,,,,,,,,,,,,,,,,,
geo:City_0,geo_city:idNational,String,,To specify differently for each country ! OR is (a rule on) (one of the) other fields ?,geo_city:idNational,,,,,,,,,,,,,,,,,,,
geo:City_0,geo_city:nuts2,geo:NUTS2_0,,No need for dotted path to autolink to main NUTS(2). NO internal field name but subresource linking. LATER refMixin ??,,,,,,,,,,,,,,,,,,,,
geo:City_0,geo_city:nuts3,geo:NUTS3_0,,NO internal field name but subresource linking,,,,,0,0,,,,,,,,,,,,,,
geo:City_0,geo_city:cityGroup,geo:CityGroup_0,,NO internal field name but auto linking,,,,,,,,,,,,,,,,,,,,
geo:City_0,geo_city:zipCode,String,,of main townhall only,geo_city:zipCode,,,,,,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:name,i18n,,,geocifr:name,,fr,,1,,,false,,geo:City_0,,,,,,,,,,
geo:CityFR_0,geo_city:country,geo:Country_0,,,,,,,,,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:idStat,String,,,geocifr:idStat,,,,,,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:nuts2,geo:NUTS2_0,,LATER refMixin ??,,,,,,,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:nuts3,geo:NUTS3_0,,LATER OPT subtype it geo:Departement_0 ???,,,,,0,0,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:cityGroup,geo:CityGroup_0,,,,,,,,,,,,,,,,,,,,,,
geo:CityFR_0,geo_city:zipCode,String,,,geocifr:zipCode,,,,,,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:name,i18n,,,geociit:name,,it,,1,,,false,,geo:City_0,,,,,,,,,,
geo:CityIT_0,geo_city:country,geo:Country_0,,,,,,,,,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:idStat,String,,,geociit:idStat,,,,,,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:nuts2,geo:NUTS2_0,,LATER refMixin ??,,,,,,,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:nuts3,geo:NUTS3_0,,LATER OPT subtype it IT ???,,,,,0,0,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:cityGroup,geo:CityGroup_0,,,,,,,,,,,,,,,,,,,,,,
geo:CityIT_0,geo_city:zipCode,String,,,geociit:zipCode,,,,,,,,,,,,,,,,,,,
geo:CityES_0,geo_city:name,i18n,,,geocies:name,,es,,1,,,false,,geo:City_0,,,,,,,,,,
geo:CityES_0,geo_city:country,geo:Country_0,,,,,,,,,,,,,,,,,,,,,,
geo:CityES_0,geo_city:idStat,String,,,geocies:idStat,,,,,,,,,,,,,,,,,,,
geo:CityES_0,geo_city:idNational,String,,,,,,,,,,,,,,,,,,,,,,
geo:CityES_0,geo_city:nuts2,geo:NUTS2_0,,LATER refMixin ??,,,,,,,,,,,,,,,,,,,,
geo:CityES_0,geo_city:nuts3,geo:NUTS3_0,,LATER OPT subtype it ES ???,,,,,0,0,,,,,,,,,,,,,,
geo:CityES_0,geo_city:cityGroup,geo:CityGroup_0,,,,,,,,,,,,,,,,,,,,,,
geo:CityES_0,geo_city:zipCode,String,,,geocies:zipCode,,,,,,,,,,,,,,,,,,,
geo:TKDistrict_0,geo_tkdistrict:name,i18n,,TK.  ~= City. Parent : TKProvince. NB. Zipcode is only SubDistrict,District,,tk,,1,,,false,,geo:Area_0,,,,,,,,,,
geo:TKDistrict_0,geo_tkdistrict:country,geo:Country_0,,parent => TKProvince,,,,,,,,,,,,,,,,,,,,
//geo:TKDistrict_0,geo_tkdistrict:country.geo_country:idIso,String,,,__useDefault,TK,,,,,,,,,,,,,,,,,,
geo:TKDistrict_0,geo_tkdistrict:province,geo:TKProvince_0,,Ref to its parent NUTS3. NO internal field name but subresource linking,,,,,0,0,,,,,,,,,,,,,,
geo:Borough_0,geo_borough:city,geo:City_0,,"LATER some / all of city refs : nuts3, nuts2, country...",,,,,0,0,,,,,,,,,,,,,,
geo:Borough_0,geo_borough:name,String,,id : country + name,,,,,1,,false,false,,geo:Area_0,,,,,,,,,,
geo:Borough_0,geo_borough:idStat,String,,NB. Turkey has also subdistrict & neighbourhood BUT those don't provide services,,,,,,,,,,,,,,,,,,,,
geo:Arrondissement_0,geo_borough:city,geo:City_0,,,,,,,0,0,,,,,,,,,,,,,,
geo:Arrondissement_0,geo_borough:name,String,,,geobofr:name,,,,1,,,false,,geo:Borough_0,,,,,,,,,,
geo:Arrondissement_0,geo_borough:idStat,String,,,,,,,,,,,,,,,,,,,,,,
